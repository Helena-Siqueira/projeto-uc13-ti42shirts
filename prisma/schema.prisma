// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Produto {
  id Int @id @default(autoincrement())
  nome String
  preco Float
  imagem String
  tamanho String
  @@map("produtos") // <----- Define o nome da tabela
  categorias Categoria [] @relation("produto_categoria")
  transacoes Transacao []
  avaliacoes Avaliacao []
}

model Categoria {
  id Int @id @default(autoincrement())
  nome String
  produtos Produto [] @relation("produto_categoria")
}


model Usuario {
  id Int @id @default(autoincrement())
  nome String
  data_nascimento String
  genero String
  email String
  senha String
  cpf String
  telefone String
  cep String
  avaliacoes Avaliacao []
  vendas Venda []
  @@map("usuarios") // <----- Define o nome da tabela
}

model Venda {
  id Int @id @default(autoincrement())
  data DateTime
  usuario_id Int
  usuario Usuario @relation(fields: [usuario_id],references: [id])
  transacoes Transacao []
  @@map("vendas")
  
}

model Transacao {
  id Int @id @default(autoincrement())
  produto_id Int
  venda_id Int
  quantidade Float

  produtos Produto @relation(fields: [produto_id],references: [id])
  vendas Venda @relation(fields: [venda_id],references: [id])
  @@map("transacao") // <----- Define o nome da tabela
}

model Avaliacao {
  id Int @id @default(autoincrement())
  nota Int
  comentario String 
  usuario_id Int
  produto_id Int

  usuario Usuario @relation(fields:[usuario_id], references: [id])
  produto Produto @relation(fields:[produto_id], references: [id])
  @@map("avaliacoes")
}
